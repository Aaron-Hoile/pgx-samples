plugins {
  id 'idea'
  id 'scala'
}

def pgxDir = "$projectDir/../libs/pgx-19.2.0"
def commonDeps = "$pgxDir/shared-lib/common"
def embeddedDeps = "$pgxDir/shared-lib/embedded"
def serverDeps = "$pgxDir/shared-lib/server"
def thirdPartyDeps = "$pgxDir/shared-lib/third-party"
def smCommonDeps = "$pgxDir/shared-memory/common"
def smClientDeps = "$pgxDir/shared-memory/client"
def smEmbeddedDeps = "$pgxDir/shared-memory/embedded"
def smThirdPartyDeps = "$pgxDir/shared-memory/third-party"

allprojects {

  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
  }

  idea {
    module {
      downloadJavadoc = true
      downloadSources = true
    }
  }

  ext {
    scalaVersion = '2.12.4'
  }

  dependencies {
    // scala
    compile group: 'org.scala-lang', name: 'scala-library', version: scalaVersion

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: "com.sparkjava", name: "spark-core", version: "2.8.0"
    compile group: "org.apache.commons", name: "commons-csv", version: "1.5"
    compile group: "org.apache.commons", name: "commons-text", version :"1.4"
    compile group: 'net.liftweb', name: 'lift-json_2.12', version: '3.3.0'
    compile group: 'com.github.scopt', name: 'scopt_2.12', version: '3.7.0'
    compile group: 'org.scalanlp', name: 'breeze_2.12', version: '0.13.2'

    implementation 'me.xdrop:fuzzywuzzy:1.2.0'

    // PGX		
    compile fileTree(dir: commonDeps, includes: ['*.jar'])
    compile fileTree(dir: embeddedDeps, includes: ['*.jar'])
    compile fileTree(dir: serverDeps, includes: ['*.jar'])
    compile fileTree(dir: thirdPartyDeps, includes: ['*.jar'])
    compile fileTree(dir: smCommonDeps, includes: ['*.jar'])
    compile fileTree(dir: smClientDeps, includes: ['*.jar'])
    compile fileTree(dir: smEmbeddedDeps, includes: ['*.jar'])
    compile fileTree(dir: smThirdPartyDeps, includes: ['*.jar'])
  }
}

apply plugin: "java"
apply plugin: 'application'
apply plugin: 'scala'

mainClassName = 'embeddings_linker.EmbeddingsLinkerMain'

tasks.withType(JavaExec) {
  jvmArgs = ['-Dpgx_conf=conf/pgx.conf']
  args = [project.projectDir]
}

task runCandidateFinder(type: JavaExec) {
  jvmArgs = ['-Xmx64g']
  classpath = sourceSets.main.runtimeClasspath
  main = 'candidate_finder.CandidateFinderMain'
  description = 'Start a Candidate Finder server, to test this module'
}

task runPreprocessor(type: JavaExec) {
  jvmArgs = ['-Xmx64g']
  classpath = sourceSets.main.runtimeClasspath
  main = 'graph_preprocessor.GraphPreprocessorMain'
  description = 'Run the graph preprocessing step'
}

task createEmbeddings(type: JavaExec) {
  jvmArgs = ['-Xmx256g']
  classpath = sourceSets.main.runtimeClasspath
  main = 'create_embeddings.CreateEmbeddingsMain'
  description = 'Create vertex embeddings for a given graph'
}

task runEL(type: JavaExec) {
  jvmArgs = ['-Xmx256g']
  classpath = sourceSets.main.runtimeClasspath
  main = 'embeddings_linker.EmbeddingsLinkerMain'
  description = 'Start the entity linker server'
}
