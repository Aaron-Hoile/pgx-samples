apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def pgxDir = "$projectDir/../libs/pgx-19.1.0"
def commonDeps = "$pgxDir/shared-lib/common"
def embeddedDeps = "$pgxDir/shared-lib/embedded"
def serverDeps = "$pgxDir/shared-lib/server"
def thirdPartyDeps = "$pgxDir/shared-lib/third-party"
def smCommonDeps = "$pgxDir/shared-memory/common"
def smClientDeps = "$pgxDir/shared-memory/client"
def smEmbeddedDeps = "$pgxDir/shared-memory/embedded"
def smThirdPartyDeps = "$pgxDir/shared-memory/third-party"

dependencies {
  compile fileTree(dir: commonDeps, includes: ['*.jar'])
  compile fileTree(dir: embeddedDeps, includes: ['*.jar'])
  compile fileTree(dir: serverDeps, includes: ['*.jar'])
  compile fileTree(dir: thirdPartyDeps, includes: ['*.jar'])
  compile fileTree(dir: smCommonDeps, includes: ['*.jar'])
  compile fileTree(dir: smClientDeps, includes: ['*.jar'])
  compile fileTree(dir: smEmbeddedDeps, includes: ['*.jar'])
  compile fileTree(dir: smThirdPartyDeps, includes: ['*.jar'])
}

task run(dependsOn: 'classes', type: JavaExec) {
  main = 'oracle.pgx.algorithms.MovieRecommender'
  classpath = sourceSets.main.runtimeClasspath

  if (project.hasProperty('data')) {
    args project.getProperty('data')
  }

  if (project.hasProperty('userID')) {
    args project.getProperty('userID')
  }

  if (project.hasProperty('topK')) {
    args project.getProperty('topK')
  }
}
